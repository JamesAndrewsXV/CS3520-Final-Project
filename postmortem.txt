One of the most difficult parts of beginning a project is setting a realistic schedule. It's easy to underestimate the difficulty or complexity of tasks, and therefore create a schedule that is difficult or impossible to stick to. This was a problem that we were very aware of and were ultimately able to avoid. While we did have to put in time to meet the deadlines for the various pieces of our project, the amount of time needed rarely felt extreme. 

In addition to clear and attainable goals, we were able to succeed because of clearly written, well commented code. There were points throughout the project where three of the four group members were debugging the code roughly simultaneously. At these points, we were not necesssarily working on code that we had written, and yet the structure of the code made it very easy to understand and fix problems with. 

Perhaps our single biggest issue was a lack of scheduling on a per-person basis. This at one point manifested in difficulty implementing unit tests, because the point at which we began working on them was after the last block of office hours before the checkpoint due date. It also manifested in occasionally delayed pushes to the Git, which meant that time that could have been used to work on implementing features was spent either on doing duplicate work or dealing with conflicts. 

The other major difficulty that we had was communication. We generally worked on this project in pairs, and while the people in each pair communicated fairly well with each other, there was occasionally a lack of communication between the pairs as to what features were being developed but had not yet been pushed to the Git. This is not to say that we did not work as a group, but instead that group members got so invovled with working on the project that they did not always fully detail what they were working on to other group members. 